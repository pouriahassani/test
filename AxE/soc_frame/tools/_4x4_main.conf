
[controller]

controller_name = scheduler

save_mode_at = 1250000000

;start_charging_at = 3218725
;stop_charging_at = 4218725
start_charging_at = -1
stop_charging_at = -1

[system]

;system_name = mult_noc_interface
;system_name = mult_noc_interface_vivado
;system_name = 2x2_16_priority_input
;system_name = 3x3_16_priority_input
system_name = 4x4_16_priority_input
;system_name = 4x5_16_priority_input

arch_lst = rv32i,rv32im

; the node_arch_lst is also used to determine the number of nodes

;node_id        0, 1, 2, 3, 4, 5, 6
node_arch_lst = i, im
#~ node_arch_lst = i, i, i, i, i, i, i, i,im,im,im,im,im,im,im,im
;node_arch_lst = i, i, i, i, i, i, i, i,i,i,i,i,i,i,i,im
;node_arch_lst = i, i, i, i, im, im, im, im,im,im,im,im,im,im,im,im

[run]

;run = prgs
run = tasks

; the timing estimation is going to be multiplied by this number to get
; the interval with which the program is executed
exec_interval_modifier = 2

[prgs]

prgs_lst = 

[tasks]

cnt_tasks = 1

loop_cnt_min = 500
loop_cnt_max = 5000

;percent_mul_min = 45
;percent_mul_max = 63
;percent_mul_min = 80
;percent_mul_max = 95
percent_mul_min = 40
percent_mul_max = 60

[sim]

sim_args = 
;sim_args = +trace

sim_prnt = True
#~ sim_prnt = SIM_RETURN_OUTPUT
