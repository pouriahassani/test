
// if save mode is not enabled, the scheduler will always pick the big nodes.

#define EN_SAVE_MODE

// if charging is enabled, save mode should be enabled as well.

#define EN_CHARGING

#define EN_SKIPPING



// the defines in this file are used for general prg assignements to
// nodes.
// they are independent from the scheduler or architectures used.

// TODO - remove battery charging stuff.

#define QUEUE_CHARGING_EVENT ( 255 )

// IDs used to identify the state of the node from the control (rtl).

#define NODE_0_ID  ( 0b00000000000000000000000000000001 )
#define NODE_1_ID  ( 0b00000000000000000000000000000010 )
#define NODE_2_ID  ( 0b00000000000000000000000000000100 )
#define NODE_3_ID  ( 0b00000000000000000000000000001000 )
#define NODE_4_ID  ( 0b00000000000000000000000000010000 )
#define NODE_5_ID  ( 0b00000000000000000000000000100000 )
#define NODE_6_ID  ( 0b00000000000000000000000001000000 )
#define NODE_7_ID  ( 0b00000000000000000000000010000000 )
#define NODE_8_ID  ( 0b00000000000000000000000100000000 )
#define NODE_9_ID  ( 0b00000000000000000000001000000000 )
#define NODE_10_ID ( 0b00000000000000000000010000000000 )
#define NODE_11_ID ( 0b00000000000000000000100000000000 )
#define NODE_12_ID ( 0b00000000000000000001000000000000 )
#define NODE_13_ID ( 0b00000000000000000010000000000000 )
#define NODE_14_ID ( 0b00000000000000000100000000000000 )
#define NODE_15_ID ( 0b00000000000000001000000000000000 )
#define NODE_16_ID ( 0b00000000000000010000000000000000 )
#define NODE_17_ID ( 0b00000000000000100000000000000000 )
#define NODE_18_ID ( 0b00000000000001000000000000000000 )
#define NODE_19_ID ( 0b00000000000010000000000000000000 )
#define NODE_20_ID ( 0b00000000000100000000000000000000 )
#define NODE_21_ID ( 0b00000000001000000000000000000000 )
#define NODE_22_ID ( 0b00000000010000000000000000000000 )
#define NODE_23_ID ( 0b00000000100000000000000000000000 )
#define NODE_24_ID ( 0b00000001000000000000000000000000 )
#define NODE_25_ID ( 0b00000010000000000000000000000000 )
#define NODE_26_ID ( 0b00000100000000000000000000000000 )
#define NODE_27_ID ( 0b00001000000000000000000000000000 )
#define NODE_28_ID ( 0b00010000000000000000000000000000 )
#define NODE_29_ID ( 0b00100000000000000000000000000000 )
#define NODE_30_ID ( 0b01000000000000000000000000000000 )
#define NODE_31_ID ( 0b10000000000000000000000000000000 )

// the NODE_x_ADDR addresses are used to control the nodes.
// they do not represent an area in memory.

#define  NODE_0_ADDR_ASSIGN ( 0b10000000000000000000000010000000 )
#define  NODE_1_ADDR_ASSIGN ( 0b10000000000000000000000010000100 )
#define  NODE_2_ADDR_ASSIGN ( 0b10000000000000000000000010001000 )
#define  NODE_3_ADDR_ASSIGN ( 0b10000000000000000000000010001100 )
#define  NODE_4_ADDR_ASSIGN ( 0b10000000000000000000000010010000 )
#define  NODE_5_ADDR_ASSIGN ( 0b10000000000000000000000010010100 )
#define  NODE_6_ADDR_ASSIGN ( 0b10000000000000000000000010011000 )
#define  NODE_7_ADDR_ASSIGN ( 0b10000000000000000000000010011100 )
#define  NODE_8_ADDR_ASSIGN ( 0b10000000000000000000000010100000 )
#define  NODE_9_ADDR_ASSIGN ( 0b10000000000000000000000010100100 )
#define NODE_10_ADDR_ASSIGN ( 0b10000000000000000000000010101000 )
#define NODE_11_ADDR_ASSIGN ( 0b10000000000000000000000010101100 )
#define NODE_12_ADDR_ASSIGN ( 0b10000000000000000000000010110000 )
#define NODE_13_ADDR_ASSIGN ( 0b10000000000000000000000010110100 )
#define NODE_14_ADDR_ASSIGN ( 0b10000000000000000000000010111000 )
#define NODE_15_ADDR_ASSIGN ( 0b10000000000000000000000010111100 )
#define NODE_16_ADDR_ASSIGN ( 0b10000000000000000000000011000000 )
#define NODE_17_ADDR_ASSIGN ( 0b10000000000000000000000011000100 )
#define NODE_18_ADDR_ASSIGN ( 0b10000000000000000000000011001000 )
#define NODE_19_ADDR_ASSIGN ( 0b10000000000000000000000011001100 )
#define NODE_20_ADDR_ASSIGN ( 0b10000000000000000000000011010000 )
#define NODE_21_ADDR_ASSIGN ( 0b10000000000000000000000011010100 )
#define NODE_22_ADDR_ASSIGN ( 0b10000000000000000000000011011000 )
#define NODE_23_ADDR_ASSIGN ( 0b10000000000000000000000011011100 )
#define NODE_24_ADDR_ASSIGN ( 0b10000000000000000000000011100000 )
#define NODE_25_ADDR_ASSIGN ( 0b10000000000000000000000011100100 )
#define NODE_26_ADDR_ASSIGN ( 0b10000000000000000000000011101000 )
#define NODE_27_ADDR_ASSIGN ( 0b10000000000000000000000011101100 )
#define NODE_28_ADDR_ASSIGN ( 0b10000000000000000000000011110000 )
#define NODE_29_ADDR_ASSIGN ( 0b10000000000000000000000011110100 )
#define NODE_30_ADDR_ASSIGN ( 0b10000000000000000000000011111000 )
#define NODE_31_ADDR_ASSIGN ( 0b10000000000000000000000011111100 )

#define  NODE_0 *( (volatile int*)  NODE_0_ADDR_ASSIGN )
#define  NODE_1 *( (volatile int*)  NODE_1_ADDR_ASSIGN )
#define  NODE_2 *( (volatile int*)  NODE_2_ADDR_ASSIGN )
#define  NODE_3 *( (volatile int*)  NODE_3_ADDR_ASSIGN )
#define  NODE_4 *( (volatile int*)  NODE_4_ADDR_ASSIGN )
#define  NODE_5 *( (volatile int*)  NODE_5_ADDR_ASSIGN )
#define  NODE_6 *( (volatile int*)  NODE_6_ADDR_ASSIGN )
#define  NODE_7 *( (volatile int*)  NODE_7_ADDR_ASSIGN )
#define  NODE_8 *( (volatile int*)  NODE_8_ADDR_ASSIGN )
#define  NODE_9 *( (volatile int*)  NODE_9_ADDR_ASSIGN )
#define NODE_10 *( (volatile int*) NODE_10_ADDR_ASSIGN )
#define NODE_11 *( (volatile int*) NODE_11_ADDR_ASSIGN )
#define NODE_12 *( (volatile int*) NODE_12_ADDR_ASSIGN )
#define NODE_13 *( (volatile int*) NODE_13_ADDR_ASSIGN )
#define NODE_14 *( (volatile int*) NODE_14_ADDR_ASSIGN )
#define NODE_15 *( (volatile int*) NODE_15_ADDR_ASSIGN )
#define NODE_16 *( (volatile int*) NODE_16_ADDR_ASSIGN )
#define NODE_17 *( (volatile int*) NODE_17_ADDR_ASSIGN )
#define NODE_18 *( (volatile int*) NODE_18_ADDR_ASSIGN )
#define NODE_19 *( (volatile int*) NODE_19_ADDR_ASSIGN )
#define NODE_20 *( (volatile int*) NODE_20_ADDR_ASSIGN )
#define NODE_21 *( (volatile int*) NODE_21_ADDR_ASSIGN )
#define NODE_22 *( (volatile int*) NODE_22_ADDR_ASSIGN )
#define NODE_23 *( (volatile int*) NODE_23_ADDR_ASSIGN )
#define NODE_24 *( (volatile int*) NODE_24_ADDR_ASSIGN )
#define NODE_25 *( (volatile int*) NODE_25_ADDR_ASSIGN )
#define NODE_26 *( (volatile int*) NODE_26_ADDR_ASSIGN )
#define NODE_27 *( (volatile int*) NODE_27_ADDR_ASSIGN )
#define NODE_28 *( (volatile int*) NODE_28_ADDR_ASSIGN )
#define NODE_29 *( (volatile int*) NODE_29_ADDR_ASSIGN )
#define NODE_30 *( (volatile int*) NODE_30_ADDR_ASSIGN )
#define NODE_31 *( (volatile int*) NODE_31_ADDR_ASSIGN )

// counters

#define NODE_0_COUNTER  ( 0b10000000000000000000001000000000 )
#define NODE_1_COUNTER  ( 0b10000000000000000000001000000100 )
#define NODE_2_COUNTER  ( 0b10000000000000000000001000001000 )
#define NODE_3_COUNTER  ( 0b10000000000000000000001000001100 )
#define NODE_4_COUNTER  ( 0b10000000000000000000001000010000 )
#define NODE_5_COUNTER  ( 0b10000000000000000000001000010100 )
#define NODE_6_COUNTER  ( 0b10000000000000000000001000011000 )
#define NODE_7_COUNTER  ( 0b10000000000000000000001000011100 )
#define NODE_8_COUNTER  ( 0b10000000000000000000001000100000 )
#define NODE_9_COUNTER  ( 0b10000000000000000000001000100100 )
#define NODE_10_COUNTER ( 0b10000000000000000000001000101000 )
#define NODE_11_COUNTER ( 0b10000000000000000000001000101100 )
#define NODE_12_COUNTER ( 0b10000000000000000000001000110000 )
#define NODE_13_COUNTER ( 0b10000000000000000000001000110100 )
#define NODE_14_COUNTER ( 0b10000000000000000000001000111000 )
#define NODE_15_COUNTER ( 0b10000000000000000000001000111100 )
#define NODE_16_COUNTER ( 0b10000000000000000000001001000000 )
#define NODE_17_COUNTER ( 0b10000000000000000000001001000100 )
#define NODE_18_COUNTER ( 0b10000000000000000000001001001000 )
#define NODE_19_COUNTER ( 0b10000000000000000000001001001100 )
#define NODE_20_COUNTER ( 0b10000000000000000000001001010000 )
#define NODE_21_COUNTER ( 0b10000000000000000000001001010100 )
#define NODE_22_COUNTER ( 0b10000000000000000000001001011000 )
#define NODE_23_COUNTER ( 0b10000000000000000000001001011100 )
#define NODE_24_COUNTER ( 0b10000000000000000000001001100000 )
#define NODE_25_COUNTER ( 0b10000000000000000000001001100100 )
#define NODE_26_COUNTER ( 0b10000000000000000000001001101000 )
#define NODE_27_COUNTER ( 0b10000000000000000000001001101100 )
#define NODE_28_COUNTER ( 0b10000000000000000000001001110000 )
#define NODE_29_COUNTER ( 0b10000000000000000000001001110100 )
#define NODE_30_COUNTER ( 0b10000000000000000000001001111000 )
#define NODE_31_COUNTER ( 0b10000000000000000000001001111100 )

#define GET_NODE_0_COUNTER  *( (volatile int*) NODE_0_COUNTER  )
#define GET_NODE_1_COUNTER  *( (volatile int*) NODE_1_COUNTER  )
#define GET_NODE_2_COUNTER  *( (volatile int*) NODE_2_COUNTER  )
#define GET_NODE_3_COUNTER  *( (volatile int*) NODE_3_COUNTER  )
#define GET_NODE_4_COUNTER  *( (volatile int*) NODE_4_COUNTER  )
#define GET_NODE_5_COUNTER  *( (volatile int*) NODE_5_COUNTER  )
#define GET_NODE_6_COUNTER  *( (volatile int*) NODE_6_COUNTER  )
#define GET_NODE_7_COUNTER  *( (volatile int*) NODE_7_COUNTER  )
#define GET_NODE_8_COUNTER  *( (volatile int*) NODE_8_COUNTER  )
#define GET_NODE_9_COUNTER  *( (volatile int*) NODE_9_COUNTER  )
#define GET_NODE_10_COUNTER *( (volatile int*) NODE_10_COUNTER )
#define GET_NODE_11_COUNTER *( (volatile int*) NODE_11_COUNTER )
#define GET_NODE_12_COUNTER *( (volatile int*) NODE_12_COUNTER )
#define GET_NODE_13_COUNTER *( (volatile int*) NODE_13_COUNTER )
#define GET_NODE_14_COUNTER *( (volatile int*) NODE_14_COUNTER )
#define GET_NODE_15_COUNTER *( (volatile int*) NODE_15_COUNTER )
#define GET_NODE_16_COUNTER *( (volatile int*) NODE_16_COUNTER )
#define GET_NODE_17_COUNTER *( (volatile int*) NODE_17_COUNTER )
#define GET_NODE_18_COUNTER *( (volatile int*) NODE_18_COUNTER )
#define GET_NODE_19_COUNTER *( (volatile int*) NODE_19_COUNTER )
#define GET_NODE_20_COUNTER *( (volatile int*) NODE_20_COUNTER )
#define GET_NODE_21_COUNTER *( (volatile int*) NODE_21_COUNTER )
#define GET_NODE_22_COUNTER *( (volatile int*) NODE_22_COUNTER )
#define GET_NODE_23_COUNTER *( (volatile int*) NODE_23_COUNTER )
#define GET_NODE_24_COUNTER *( (volatile int*) NODE_24_COUNTER )
#define GET_NODE_25_COUNTER *( (volatile int*) NODE_25_COUNTER )
#define GET_NODE_26_COUNTER *( (volatile int*) NODE_26_COUNTER )
#define GET_NODE_27_COUNTER *( (volatile int*) NODE_27_COUNTER )
#define GET_NODE_28_COUNTER *( (volatile int*) NODE_28_COUNTER )
#define GET_NODE_29_COUNTER *( (volatile int*) NODE_29_COUNTER )
#define GET_NODE_30_COUNTER *( (volatile int*) NODE_30_COUNTER )
#define GET_NODE_31_COUNTER *( (volatile int*) NODE_31_COUNTER )

// counter global

#define COUNTER_GLOBAL ( 0b10000000000000000000010000000000 )
#define GET_COUNTER_GLOBAL *( (volatile int*) COUNTER_GLOBAL )

// get the busy flag register

#define NODE_BUSY_ADDR ( 0b10000000000000000000000100000000 )
#define GET_BUSY *( (volatile int*) NODE_BUSY_ADDR )

// get the battery charge

//~ #define BATTERY_CHARGE ( 0b10000000000000000000100000000000 )
//~ #define GET_BATTERY_CHARGE *( (volatile int*) BATTERY_CHARGE )

// get the charging state

//~ #define BATTERY_IS_CHARGING ( 0b10000000000000000001000000000000 )
//~ #define GET_BATTERY_IS_CHARGING *( (volatile int*) BATTERY_IS_CHARGING )

// turn battery chargin on or off

//~ #define BATTERY_CHARGING_ON ( 0b10000000000000000010000000000000 )
//~ #define GET_BATTERY_CHARGING_ON *( (volatile int*) BATTERY_CHARGING_ON )

//~ #define BATTERY_CHARGING_OFF ( 0b10000000000000000100000000000000 )
//~ #define GET_BATTERY_CHARGING_OFF *( (volatile int*) BATTERY_CHARGING_OFF )

// counter global reset

#define COUNTER_GLOBAL_RESET ( 0b10000000000000001000000000000000 )
#define GET_COUNTER_GLOBAL_RESET *( (volatile int*) COUNTER_GLOBAL_RESET )

//~ #define TRIGGER_SET ( 0b10000000000000010000000000000000 )
//~ #define GET_TRIGGER_SET *( (volatile int*) TRIGGER_SET )

//~ #define TRIGGER_B_SET ( 0b10000000000000100000000000000000 )
//~ #define GET_TRIGGER_B_SET *( (volatile int*) TRIGGER_B_SET )

#define LEDS_STATUS ( 0b10000000000001000000000000000000 )
#define SET_LEDS_STATUS *( (volatile int*) LEDS_STATUS )

#define TRIGGERS ( 0b10000000000010000000000000000000 )
#define SET_TRIGGERS *( (volatile int*) TRIGGERS )


#define SPOON ( 0b10000000000100000000000000000000 )
#define GET_SPOON_FED *( (volatile int*) SPOON )





//~ #define LED_B_SET ( 0b10000000000010000000000000000000 )
//~ #define GET_LED_B_SET *( (volatile int*) LED_B_SET )

//~ #define LED_A_OFF ( 0b10000000000100000000000000000000 )
//~ #define GET_LED_A_OFF *( (volatile int*) LED_A_OFF )

// mask out all the flags except one

#define NODE_0_BUSY  ( GET_BUSY & NODE_0_ID  )
#define NODE_1_BUSY  ( GET_BUSY & NODE_1_ID  )
#define NODE_2_BUSY  ( GET_BUSY & NODE_2_ID  )
#define NODE_3_BUSY  ( GET_BUSY & NODE_3_ID  )
#define NODE_4_BUSY  ( GET_BUSY & NODE_4_ID  )
#define NODE_5_BUSY  ( GET_BUSY & NODE_5_ID  )
#define NODE_6_BUSY  ( GET_BUSY & NODE_6_ID  )
#define NODE_7_BUSY  ( GET_BUSY & NODE_7_ID  )
#define NODE_8_BUSY  ( GET_BUSY & NODE_8_ID  )
#define NODE_9_BUSY  ( GET_BUSY & NODE_9_ID  )
#define NODE_10_BUSY ( GET_BUSY & NODE_10_ID )
#define NODE_11_BUSY ( GET_BUSY & NODE_11_ID )
#define NODE_12_BUSY ( GET_BUSY & NODE_12_ID )
#define NODE_13_BUSY ( GET_BUSY & NODE_13_ID )
#define NODE_14_BUSY ( GET_BUSY & NODE_14_ID )
#define NODE_15_BUSY ( GET_BUSY & NODE_15_ID )
#define NODE_16_BUSY ( GET_BUSY & NODE_16_ID )
#define NODE_17_BUSY ( GET_BUSY & NODE_17_ID )
#define NODE_18_BUSY ( GET_BUSY & NODE_18_ID )
#define NODE_19_BUSY ( GET_BUSY & NODE_19_ID )
#define NODE_20_BUSY ( GET_BUSY & NODE_20_ID )
#define NODE_21_BUSY ( GET_BUSY & NODE_21_ID )
#define NODE_22_BUSY ( GET_BUSY & NODE_22_ID )
#define NODE_23_BUSY ( GET_BUSY & NODE_23_ID )
#define NODE_24_BUSY ( GET_BUSY & NODE_24_ID )
#define NODE_25_BUSY ( GET_BUSY & NODE_25_ID )
#define NODE_26_BUSY ( GET_BUSY & NODE_26_ID )
#define NODE_27_BUSY ( GET_BUSY & NODE_27_ID )
#define NODE_28_BUSY ( GET_BUSY & NODE_28_ID )
#define NODE_29_BUSY ( GET_BUSY & NODE_29_ID )
#define NODE_30_BUSY ( GET_BUSY & NODE_30_ID )
#define NODE_31_BUSY ( GET_BUSY & NODE_31_ID )

// stay in a loop as long as the node is busy

#define NODE_0_BUSY_BLOCK  while ( NODE_0_BUSY  ) {}
#define NODE_1_BUSY_BLOCK  while ( NODE_1_BUSY  ) {}
#define NODE_2_BUSY_BLOCK  while ( NODE_2_BUSY  ) {}
#define NODE_3_BUSY_BLOCK  while ( NODE_3_BUSY  ) {}
#define NODE_4_BUSY_BLOCK  while ( NODE_4_BUSY  ) {}
#define NODE_5_BUSY_BLOCK  while ( NODE_5_BUSY  ) {}
#define NODE_6_BUSY_BLOCK  while ( NODE_6_BUSY  ) {}
#define NODE_7_BUSY_BLOCK  while ( NODE_7_BUSY  ) {}
#define NODE_8_BUSY_BLOCK  while ( NODE_8_BUSY  ) {}
#define NODE_9_BUSY_BLOCK  while ( NODE_9_BUSY  ) {}
#define NODE_10_BUSY_BLOCK while ( NODE_10_BUSY ) {}
#define NODE_11_BUSY_BLOCK while ( NODE_11_BUSY ) {}
#define NODE_12_BUSY_BLOCK while ( NODE_12_BUSY ) {}
#define NODE_13_BUSY_BLOCK while ( NODE_13_BUSY ) {}
#define NODE_14_BUSY_BLOCK while ( NODE_14_BUSY ) {}
#define NODE_15_BUSY_BLOCK while ( NODE_15_BUSY ) {}
#define NODE_16_BUSY_BLOCK while ( NODE_16_BUSY ) {}
#define NODE_17_BUSY_BLOCK while ( NODE_17_BUSY ) {}
#define NODE_18_BUSY_BLOCK while ( NODE_18_BUSY ) {}
#define NODE_19_BUSY_BLOCK while ( NODE_19_BUSY ) {}
#define NODE_20_BUSY_BLOCK while ( NODE_20_BUSY ) {}
#define NODE_21_BUSY_BLOCK while ( NODE_21_BUSY ) {}
#define NODE_22_BUSY_BLOCK while ( NODE_22_BUSY ) {}
#define NODE_23_BUSY_BLOCK while ( NODE_23_BUSY ) {}
#define NODE_24_BUSY_BLOCK while ( NODE_24_BUSY ) {}
#define NODE_25_BUSY_BLOCK while ( NODE_25_BUSY ) {}
#define NODE_26_BUSY_BLOCK while ( NODE_26_BUSY ) {}
#define NODE_27_BUSY_BLOCK while ( NODE_27_BUSY ) {}
#define NODE_28_BUSY_BLOCK while ( NODE_28_BUSY ) {}
#define NODE_29_BUSY_BLOCK while ( NODE_29_BUSY ) {}
#define NODE_30_BUSY_BLOCK while ( NODE_30_BUSY ) {}
#define NODE_31_BUSY_BLOCK while ( NODE_31_BUSY ) {}

// check if a node is ready

#define NODE_0_READY  ( ! NODE_0_BUSY  )
#define NODE_1_READY  ( ! NODE_1_BUSY  )
#define NODE_2_READY  ( ! NODE_2_BUSY  )
#define NODE_3_READY  ( ! NODE_3_BUSY  )
#define NODE_4_READY  ( ! NODE_4_BUSY  )
#define NODE_5_READY  ( ! NODE_5_BUSY  )
#define NODE_6_READY  ( ! NODE_6_BUSY  )
#define NODE_7_READY  ( ! NODE_7_BUSY  )
#define NODE_8_READY  ( ! NODE_8_BUSY  )
#define NODE_9_READY  ( ! NODE_9_BUSY  )
#define NODE_10_READY ( ! NODE_10_BUSY )
#define NODE_11_READY ( ! NODE_11_BUSY )
#define NODE_12_READY ( ! NODE_12_BUSY )
#define NODE_13_READY ( ! NODE_13_BUSY )
#define NODE_14_READY ( ! NODE_14_BUSY )
#define NODE_15_READY ( ! NODE_15_BUSY )
#define NODE_16_READY ( ! NODE_16_BUSY )
#define NODE_17_READY ( ! NODE_17_BUSY )
#define NODE_18_READY ( ! NODE_18_BUSY )
#define NODE_19_READY ( ! NODE_19_BUSY )
#define NODE_20_READY ( ! NODE_20_BUSY )
#define NODE_21_READY ( ! NODE_21_BUSY )
#define NODE_22_READY ( ! NODE_22_BUSY )
#define NODE_23_READY ( ! NODE_23_BUSY )
#define NODE_24_READY ( ! NODE_24_BUSY )
#define NODE_25_READY ( ! NODE_25_BUSY )
#define NODE_26_READY ( ! NODE_26_BUSY )
#define NODE_27_READY ( ! NODE_27_BUSY )
#define NODE_28_READY ( ! NODE_28_BUSY )
#define NODE_29_READY ( ! NODE_29_BUSY )
#define NODE_30_READY ( ! NODE_30_BUSY )
#define NODE_31_READY ( ! NODE_31_BUSY )

#define IS_BUSY(  node_id_flag ) ( GET_BUSY & node_id_flag )
#define IS_READY( node_id_flag ) ( ! IS_BUSY(node_id_flag) )

#define ASSIGN( node, prg ) ( *( (volatile int*) node.addr_assign ) = prg.addr[node.arch] )
